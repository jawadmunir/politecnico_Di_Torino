/* Dear sir this is the program using strtok Library function in order to seperate the time format into hours minutes and seconds. Sir i have 
added an additional char time[15] array in the original data structure inorder to read the format and then later on used strtok. Sir i was confused
in the written exam about to how to read the time format so i used strtok but i later on realized that sscanf is so intellegent that it can read the
file as we want, so i had also made another program in which i used the data structure as i have done  in written exam. I have made the program in 
both ways by using strtok() ,and by using simple directly sscanf() , to read from the file. Sir i swear to you that nobody had helped me and i didnt 
asked any help from anyone and i made the program myself, you can take the oral exam or any other sort of exam in order to confirm that i know 
how to program. I also passed this exam before i got 22/30 and i rejected and later on due to personel reason i was unable to give the exam. But now
i want to finish all my exam, so i hope you would consider this miner mistakes of mine just as small errors. 
Later on i have mentioned to many functions in original written exam and its stupid i didnt used all of them instead i just usedd one functio and i 
tried to do everything in that Ranking() fnction. All rest of the functions i didnt used. I could have divide the work but i found out its useless
to do.
dear sir also i was student of Professor Cimineria and not Professor  Ricardo Sisto, but i passes this exam with Professor Sisto and he 
gave me 22/30 marks. I didnt knew that in computer programming exam you have to write all the program in the class i thought hat this exam will be 
like Advanced Programming where student just have to write the Algorithms and Functions name in written exam and Original program would be done at 
home. But in this exam i made  some little mistakes in written exam i hope you would not be strict. Thankyou. 
*/

#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>
#include <conio.h>
// Program using directly sscanf() to read the file format in HH:MM:SS and write it into data structure. 
struct athlete{
					int id; // for athlete id
					char hour;
					char min;
					char sec;
					struct athlete *nextList;
					}Athlete;
typedef struct athlete *ATHLETEPNT;
ATHLETEPNT headList= NULL;
void Ranking(ATHLETEPNT , int);
void printascendingorder();// never used 
void swap();// never used 
void output();// never used
int main()
{
    int HOUR, MIN, SEC,n=0;
	 char buffer[40];
	 int control,counter=0;
	 int pass,i=0,hold=0,t=0;
	 char a, b ,c;
	 FILE *fp;
	 ATHLETEPNT   athleteList; 
	 printf(" \n\n******************************************************\n");
	 printf(" *             RANKING OF RACE                          *\n");
	 printf("******************************************************\n\n\n");
	 printf("the read file is as \n\n");
	   printf("<Athlete id> \t <Arrival time>\n");
	 do
	 {
				 control=0;
	 if((fp= fopen("race.txt","r"))==NULL)
	 {
			printf("file could not open\n");
			control=1;
			}
	 else{
			 headList=NULL;
	 while(fgets(buffer,39,fp)!=NULL)
	 {
	 athleteList=(ATHLETEPNT)malloc(sizeof(struct athlete));
	 sscanf(buffer," %d %d %c %d %c %d",&athleteList->id,&athleteList->hour,&a,&athleteList->min,&b,&athleteList->sec);
        athleteList->nextList=headList;
		headList=athleteList;
		counter++;
		printf("\t %d \t %+d:%02d:%02d \n",athleteList->id,athleteList->hour,athleteList->min,athleteList->sec);		
        }// end while
			}//end else
			Ranking(headList , counter);// function call
 system("PAUSE");

}while(control);
 return 0;
}// end main
void Ranking(ATHLETEPNT headList, int counter)
{
     int Atime[counter];// for time in seconds
     int aid[counter];// for athlete id
     int h[counter];
	 int delay[counter];
	 ATHLETEPNT athleteList;
	 int n=0,HOUR=0,MIN=0,SEC=0,pass,i,hold=0,t=0;

for(athleteList=headList;athleteList!=NULL && n<counter;athleteList=athleteList->nextList)
     {
                        HOUR=(athleteList->hour)*60*60;
                        MIN=(athleteList->min)*60;
                        SEC=athleteList->sec;
                        Atime[n]=HOUR+MIN+SEC;// time in seconds
                        aid[n]=athleteList->id; // athlete id
                         n++;
                         }
                         // sorting
     for(pass=1,athleteList=headList;athleteList!=NULL && pass<counter;athleteList=athleteList->nextList,pass++){
         for(i=0;i<counter-1;i++){
                                  // swap
                                  if(Atime[i]>Atime[i+1]){
                                                          hold=Atime[i];
                                                          Atime[i]=Atime[i+1];
                                                          Atime[i+1]=hold;
                                                          t=aid[i];
                                                          aid[i]= aid[i+1];
                                                          aid[i+1]=t;                            
                                                          }// end if
                                                          
                                                          }// end inner for
                                  h[0]=Atime[0];                                                
          } // end outer for 
         for(i=0;i<counter-1;i++){
         delay[i]=Atime[i+1]-Atime[0];
         h[i+1]=delay[i];
         }
         //  converting seconds back to HH:MM:SS
         for(i=0;i<counter;i++){
         SEC=h[i]%60;
         MIN=(h[i]/60)%60;
         HOUR=h[i]/3600;
    printf("\n\n %d \t %+d:%02d:%02d \n",aid[i],HOUR,MIN,SEC);
         }
         }
         
         
         
